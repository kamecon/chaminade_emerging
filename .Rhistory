## equilibrio despues impuesto
p_at <- (a-c+(d*t))/(d+b)
q_at <- a - b*p_at
# precio pagado por el comprador
pc <- p_at
# precio recibido por el vendedor
pv <- p_at-t
# recuadacion
tr <- t*q_at
# deadweight loss
dl <- t*(q_bt-q_at)
#consumer surplus
cs <- (((a/b)-p_at)*q_at)/2
a
c
p_bt
q_bt
p_at
q_at
pc
pv
tr
dl
cs; t
10-5.5
4.5/2
getwd()
setwd("H:/chaminade_emerging/")
install.packages("xaringan")
gdppc_data <- wb(indicator = 'NY.GDP.PCAP.CD', startdate = 1990, enddate = 2019)
gdppc_data %>% dplyr::filter(country %in% c("European Union", "Latin America & Caribbean",  "Sub-Saharan Africa",  "South Asia", "North America")) %>%
ggplot(aes(x=date,y=value, group=country, colour=country))+
geom_line(size=1.6) +
labs(title = 'PIB per Cápita',
x ='Año',
y = 'PIB per cápita',
caption = 'Fuente = Banco Mundial') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())
pacman::p_load(wbstats, IMFData, tidyverse, kableExtra)
gdppc_data <- wb(indicator = 'NY.GDP.PCAP.CD', startdate = 1990, enddate = 2019)
gdppc_data %>% dplyr::filter(country %in% c("European Union", "Latin America & Caribbean",  "Sub-Saharan Africa",  "South Asia", "North America")) %>%
ggplot(aes(x=date,y=value, group=country, colour=country))+
geom_line(size=1.6) +
labs(title = 'PIB per Cápita',
x ='Año',
y = 'PIB per cápita',
caption = 'Fuente = Banco Mundial') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())
databaseID <- "PCTOT"
startdate = "2001-01-01"
enddate = "2019-12-31"
checkquery = FALSE
#Definimos frecuencia, paises e indicador
queryfilter_dc <- list(CL_FREQ = "A",
CL_Country_PCTOT = c("VE","AE","SA","PE","NG","MX","BR","AR","BO"),
CL_Indicator_PCTOT = "x",
CL_Type_PCTOT="H_RW_IX")
#Hacemos la busqueda
TOTquery_dc <- CompactDataMethod(databaseID, queryfilter_dc, startdate, enddate,
checkquery)
#Creamos una lista con los paises repetidos segun tantas observaciones tengamos, asi creamos luego una columnda de paises
list_dc <-  TOTquery_dc[2] %>%
unlist() %>%
as.vector() %>%
rep(each=17)
#El query nos da una lista, uno de los elementos de la lista son los datos, donde cada pais es un subelemento de la lista.Tomamos el elemento de la lista con los datos, los juntamos todos con un rbind y lo convertimos en un tibble
data_dc <- TOTquery_dc$Obs %>%
bind_rows() %>%
as_tibble()
#Cambiamos nombres de las columnas
colnames(data_dc) <- c("Año", "Valor")
#Pasamos las columnas a numerico
data_dc <- data_dc %>%
purrr::map(as.numeric) %>%
as_tibble()
#Añadimos la columna de pais
data_dc$Pais <- list_dc
#Repetimos lo anterior con otro grupo de paises
queryfilter_dev <- list(CL_FREQ = "A",
CL_Country_PCTOT = c("US","GB","CH","ES","PT","NL","JP","IT","IE"),
CL_Indicator_PCTOT = "x",
CL_Type_PCTOT="H_RW_IX")
TOTquery_dev <- CompactDataMethod(databaseID, queryfilter_dev, startdate, enddate,
checkquery)
list_dev <-  TOTquery_dev[2] %>%
unlist() %>%
as.vector() %>%
rep(each=17)
data_dev <- TOTquery_dev$Obs %>%
bind_rows() %>%
as_tibble()
colnames(data_dev) <- c("Año", "Valor")
data_dev <- data_dev %>%
purrr::map(as.numeric) %>%
as_tibble()
data_dev$Pais <- list_dev
data_TOT <- bind_rows(data_dc,data_dev)
data_TOT$region <-  rep(c("developing","advance"), each=nrow(data_dc))
data_TOT %>% ggplot(aes(x=Año,y=Valor, group=Pais, colour=Pais))+
geom_line(size=1.6) +
labs(title = 'Términos de Intercambio',
x ='Año',
y = 'Términos de Intercambio',
caption = 'Fuente = Fondo Monetario Internacional') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())+
scale_x_continuous(breaks = seq(2000,2017,1))+
facet_wrap(~region)
databaseID <- "PCTOT"
startdate = "2001-01-01"
enddate = "2018-12-31"
checkquery = FALSE
#Definimos frecuencia, paises e indicador
queryfilter_dc <- list(CL_FREQ = "A",
CL_Country_PCTOT = c("VE","AE","SA","PE","NG","MX","BR","AR","BO"),
CL_Indicator_PCTOT = "x",
CL_Type_PCTOT="H_RW_IX")
#Hacemos la busqueda
TOTquery_dc <- CompactDataMethod(databaseID, queryfilter_dc, startdate, enddate,
checkquery)
#Creamos una lista con los paises repetidos segun tantas observaciones tengamos, asi creamos luego una columnda de paises
list_dc <-  TOTquery_dc[2] %>%
unlist() %>%
as.vector() %>%
rep(each=17)
#El query nos da una lista, uno de los elementos de la lista son los datos, donde cada pais es un subelemento de la lista.Tomamos el elemento de la lista con los datos, los juntamos todos con un rbind y lo convertimos en un tibble
data_dc <- TOTquery_dc$Obs %>%
bind_rows() %>%
as_tibble()
#Cambiamos nombres de las columnas
colnames(data_dc) <- c("Año", "Valor")
#Pasamos las columnas a numerico
data_dc <- data_dc %>%
purrr::map(as.numeric) %>%
as_tibble()
#Añadimos la columna de pais
data_dc$Pais <- list_dc
#Repetimos lo anterior con otro grupo de paises
queryfilter_dev <- list(CL_FREQ = "A",
CL_Country_PCTOT = c("US","GB","CH","ES","PT","NL","JP","IT","IE"),
CL_Indicator_PCTOT = "x",
CL_Type_PCTOT="H_RW_IX")
TOTquery_dev <- CompactDataMethod(databaseID, queryfilter_dev, startdate, enddate,
checkquery)
list_dev <-  TOTquery_dev[2] %>%
unlist() %>%
as.vector() %>%
rep(each=17)
data_dev <- TOTquery_dev$Obs %>%
bind_rows() %>%
as_tibble()
colnames(data_dev) <- c("Año", "Valor")
data_dev <- data_dev %>%
purrr::map(as.numeric) %>%
as_tibble()
data_dev$Pais <- list_dev
data_TOT <- bind_rows(data_dc,data_dev)
data_TOT$region <-  rep(c("developing","advance"), each=nrow(data_dc))
data_TOT %>% ggplot(aes(x=Año,y=Valor, group=Pais, colour=Pais))+
geom_line(size=1.6) +
labs(title = 'Términos de Intercambio',
x ='Año',
y = 'Términos de Intercambio',
caption = 'Fuente = Fondo Monetario Internacional') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())+
scale_x_continuous(breaks = seq(2000,2017,1))+
facet_wrap(~region)
list_dc <-  TOTquery_dc[2] %>%
unlist() %>%
as.vector() %>%
rep(each=17)
#El query nos da una lista, uno de los elementos de la lista son los datos, donde cada pais es un subelemento de la lista.Tomamos el elemento de la lista con los datos, los juntamos todos con un rbind y lo convertimos en un tibble
data_dc <- TOTquery_dc$Obs %>%
bind_rows() %>%
as_tibble()
#Cambiamos nombres de las columnas
colnames(data_dc) <- c("Año", "Valor")
#Pasamos las columnas a numerico
data_dc <- data_dc %>%
purrr::map(as.numeric) %>%
as_tibble()
data_dc %>% head()
data_dc
data_dc$Año %>% unique()
databaseID <- "PCTOT"
startdate = "2001-01-01"
enddate = "2019-12-31"
checkquery = FALSE
#Definimos frecuencia, paises e indicador
queryfilter_dc <- list(CL_FREQ = "A",
CL_Country_PCTOT = c("VE","AE","SA","PE","NG","MX","BR","AR","BO"),
CL_Indicator_PCTOT = "x",
CL_Type_PCTOT="H_RW_IX")
#Hacemos la busqueda
TOTquery_dc <- CompactDataMethod(databaseID, queryfilter_dc, startdate, enddate,
checkquery)
#Creamos una lista con los paises repetidos segun tantas observaciones tengamos, asi creamos luego una columnda de paises
list_dc <-  TOTquery_dc[2] %>%
unlist() %>%
as.vector() %>%
rep(each=19)
#El query nos da una lista, uno de los elementos de la lista son los datos, donde cada pais es un subelemento de la lista.Tomamos el elemento de la lista con los datos, los juntamos todos con un rbind y lo convertimos en un tibble
data_dc <- TOTquery_dc$Obs %>%
bind_rows() %>%
as_tibble()
#Cambiamos nombres de las columnas
colnames(data_dc) <- c("Año", "Valor")
#Pasamos las columnas a numerico
data_dc <- data_dc %>%
purrr::map(as.numeric) %>%
as_tibble()
#Añadimos la columna de pais
data_dc$Pais <- list_dc
queryfilter_dev <- list(CL_FREQ = "A",
CL_Country_PCTOT = c("US","GB","CH","ES","PT","NL","JP","IT","IE"),
CL_Indicator_PCTOT = "x",
CL_Type_PCTOT="H_RW_IX")
TOTquery_dev <- CompactDataMethod(databaseID, queryfilter_dev, startdate, enddate,
checkquery)
list_dev <-  TOTquery_dev[2] %>%
unlist() %>%
as.vector() %>%
rep(each=19)
data_dev <- TOTquery_dev$Obs %>%
bind_rows() %>%
as_tibble()
colnames(data_dev) <- c("Año", "Valor")
data_dev <- data_dev %>%
purrr::map(as.numeric) %>%
as_tibble()
data_dev$Pais <- list_dev
data_TOT <- bind_rows(data_dc,data_dev)
data_TOT$region <-  rep(c("developing","advance"), each=nrow(data_dc))
data_TOT %>% ggplot(aes(x=Año,y=Valor, group=Pais, colour=Pais))+
geom_line(size=1.6) +
labs(title = 'Términos de Intercambio',
x ='Año',
y = 'Términos de Intercambio',
caption = 'Fuente = Fondo Monetario Internacional') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())+
scale_x_continuous(breaks = seq(2000,2017,1))+
facet_wrap(~region)
data_TOT %>% ggplot(aes(x=Año,y=Valor, group=Pais, colour=Pais))+
geom_line(size=1.6) +
labs(title = 'Términos de Intercambio',
x ='Año',
y = 'Términos de Intercambio',
caption = 'Fuente = Fondo Monetario Internacional') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())+
scale_x_continuous(breaks = seq(2000,2019,1))+
facet_wrap(~region)
17*4
databaseID <- "FM"
startdate = "2001-01-01"
enddate = "2019-12-31"
checkquery = FALSE
queryfilter_fisc <- list(CL_FREQ = "A",
CL_AREA_FM = c("XR29","1C_035","1C_EMFLAT","R23"),
CL_INDICATOR_FM = c("G_X_G01_GDP_PT","G_XWDG_G01_GDP_PT","GGXCNL_G01_GDP_PT","GGR_G01_GDP_PT"))
TOTquery_fisc <- CompactDataMethod(databaseID, queryfilter_fisc, startdate, enddate,
checkquery)
regions <- TOTquery_fisc[2] %>% unlist() %>% as.vector() %>% rep(each=19)
concepts <- TOTquery_fisc[3] %>% unlist() %>% as.vector() %>% rep(each=19)
data_fisc <- TOTquery_fisc$Obs %>%
bind_rows() %>%
as_tibble()
colnames(data_fisc) <- c("Año", "Valor")
data_fisc <- data_fisc %>%
purrr::map(as.numeric) %>%
as_tibble()
data_fisc$Region <- regions
data_fisc$concepto <- concepts
data_fisc$Regiones <-  c("Emerging Market and Middle-Income Economies","Major Advanced Economies - G7","Advanced Economies (IMF)","Emerging Market Latin America") %>%
rep(each=19, len=272)
data_fisc$Conceptos <-  c("Expenditure","Gross debt","Balance","Revenue") %>%
rep(each=(19*4), len=272)
Tablas <- list()
for (variable in c("Emerging Market and Middle-Income Economies","Major Advanced Economies - G7","Advanced Economies (IMF)","Emerging Market Latin America")) {
Tablas[[variable]] <- data_fisc %>%
dplyr::filter(Regiones == variable) %>%
group_by(Conceptos) %>%
summarise(Gasto = mean(Valor))
}
Tablas_prov <- Tablas %>%
bind_cols() %>%
select(-matches("^C.*[0-9]$")) #Empieza por C y acaba en digito. No seleccionar
colnames(Tablas_prov)[2:ncol(Tablas_prov)] <- c("Emerging Market and Middle-Income Economies","Major Advanced Economies - G7","Advanced Economies (IMF)","Emerging Market Latin America")
kable(Tablas_prov) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
data_fisc$Regiones <-  c("Emerging Market and Middle-Income Economies","Major Advanced Economies - G7","Advanced Economies (IMF)","Emerging Market Latin America") %>%
rep(each=19, len=304)
data_fisc$Conceptos <-  c("Expenditure","Gross debt","Balance","Revenue") %>%
rep(each=(19*4), len=304)
Tablas <- list()
for (variable in c("Emerging Market and Middle-Income Economies","Major Advanced Economies - G7","Advanced Economies (IMF)","Emerging Market Latin America")) {
Tablas[[variable]] <- data_fisc %>%
dplyr::filter(Regiones == variable) %>%
group_by(Conceptos) %>%
summarise(Gasto = mean(Valor))
}
Tablas_prov <- Tablas %>%
bind_cols() %>%
select(-matches("^C.*[0-9]$")) #Empieza por C y acaba en digito. No seleccionar
colnames(Tablas_prov)[2:ncol(Tablas_prov)] <- c("Emerging Market and Middle-Income Economies","Major Advanced Economies - G7","Advanced Economies (IMF)","Emerging Market Latin America")
kable(Tablas_prov) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
data_fisc$concepto
Tablas$`Major Advanced Economies - G7`
Tablas$`Emerging Market and Middle-Income Economies`
Tablas$`Advanced Economies (IMF)`
Tablas$`Emerging Market Latin America`
Tablas_prov$Gasto...2
Tablas %>%
bind_cols()
Tablas %>%
bind_cols() %>%
select(-matches("^C.*[0-9]$"))
colnames(Tablas_prov)[2:ncol(Tablas_prov)] <- c("Emerging Market and Middle-Income Economies","Major Advanced Economies - G7","Advanced Economies (IMF)","Emerging Market Latin America")
colnames(Tablas_prov)[1:ncol(Tablas_prov)] <- c("Emerging Market and Middle-Income Economies","Major Advanced Economies - G7","Advanced Economies (IMF)","Emerging Market Latin America")
Tablas_prov
data_fisc$concepto
data_fisc$Conceptos
data_fisc$Conceptos %>% unique()
databaseID <- "IFS"
startdate = "2001-01-01"
enddate = "2019-12-31"
checkquery = FALSE
queryfilter_int1 <- list(CL_FREQ = "A",
CL_AREA_IFS = c("AU","GE","BR","US","NG","U2","TH"),
CL_INDICATOR_IFS = c("FILR_PA"))
TOTquery_int1 <- CompactDataMethod(databaseID, queryfilter_int1, startdate, enddate,
checkquery)
list_int1 <-  TOTquery_int1[2] %>%
unlist() %>%
as.vector() %>%
rep(c(19,17,19,19,17,19))
data_int1 <- TOTquery_int1$Obs %>%
bind_rows() %>%
as_tibble()
colnames(data_int1) <- c("Año", "Valor")
data_int1 <- data_int1 %>%
purrr::map(as.numeric) %>%
as_tibble()
data_int1$Pais <- list_int1
data_int1 %>% dplyr::filter(Pais!="GE") %>%
ggplot(aes(x=Año,y=Valor, group=Pais, colour=Pais))+
geom_line(size=1.6) +
labs(title = 'Tipos de interés de préstamos',
x ='Año',
y = 'Tipo de interés (%)',
caption = 'Fuente = Fondo Monetario Internacional') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())+
scale_x_continuous(breaks = seq(2000,2019,1))
databaseID <- "IFS"
startdate = "2001-01-01"
enddate = "2019-12-31"
checkquery = FALSE
queryfilter_int1 <- list(CL_FREQ = "A",
CL_AREA_IFS = c("AU","GE","BR","US","NG","U2",),
CL_INDICATOR_IFS = c("FILR_PA"))
TOTquery_int1 <- CompactDataMethod(databaseID, queryfilter_int1, startdate, enddate,
checkquery)
list_int1 <-  TOTquery_int1[2] %>%
unlist() %>%
as.vector() %>%
rep(c(19,17,19,19,17,19))
data_int1 <- TOTquery_int1$Obs %>%
bind_rows() %>%
as_tibble()
colnames(data_int1) <- c("Año", "Valor")
data_int1 <- data_int1 %>%
purrr::map(as.numeric) %>%
as_tibble()
data_int1$Pais <- list_int1
data_int1 %>% dplyr::filter(Pais!="GE") %>%
ggplot(aes(x=Año,y=Valor, group=Pais, colour=Pais))+
geom_line(size=1.6) +
labs(title = 'Tipos de interés de préstamos',
x ='Año',
y = 'Tipo de interés (%)',
caption = 'Fuente = Fondo Monetario Internacional') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())+
scale_x_continuous(breaks = seq(2000,2019,1))
databaseID <- "IFS"
startdate = "2001-01-01"
enddate = "2019-12-31"
checkquery = FALSE
queryfilter_int1 <- list(CL_FREQ = "A",
CL_AREA_IFS = c("AU","GE","BR","US","NG","U2"),
CL_INDICATOR_IFS = c("FILR_PA"))
TOTquery_int1 <- CompactDataMethod(databaseID, queryfilter_int1, startdate, enddate,
checkquery)
list_int1 <-  TOTquery_int1[2] %>%
unlist() %>%
as.vector() %>%
rep(c(19,17,19,19,17,19))
data_int1 <- TOTquery_int1$Obs %>%
bind_rows() %>%
as_tibble()
colnames(data_int1) <- c("Año", "Valor")
data_int1 <- data_int1 %>%
purrr::map(as.numeric) %>%
as_tibble()
data_int1$Pais <- list_int1
data_int1 %>% dplyr::filter(Pais!="GE") %>%
ggplot(aes(x=Año,y=Valor, group=Pais, colour=Pais))+
geom_line(size=1.6) +
labs(title = 'Tipos de interés de préstamos',
x ='Año',
y = 'Tipo de interés (%)',
caption = 'Fuente = Fondo Monetario Internacional') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())+
scale_x_continuous(breaks = seq(2000,2019,1))
databaseID <- "IFS"
startdate = "2001-01-01"
enddate = "2019-12-31"
checkquery = FALSE
queryfilter_int1 <- list(CL_FREQ = "A",
CL_AREA_IFS = c("AU","GE","BR","US","NG","U2","TH"),
CL_INDICATOR_IFS = c("FILR_PA"))
TOTquery_int1 <- CompactDataMethod(databaseID, queryfilter_int1, startdate, enddate,
checkquery)
list_int1 <-  TOTquery_int1[2] %>%
unlist() %>%
as.vector() %>%
rep(c(19,17,19,19,17,19))
data_int1 <- TOTquery_int1$Obs %>%
bind_rows() %>%
as_tibble()
colnames(data_int1) <- c("Año", "Valor")
data_int1 <- data_int1 %>%
purrr::map(as.numeric) %>%
as_tibble()
data_int1$Pais <- list_int1
data_int1 %>% dplyr::filter(Pais!="GE") %>%
ggplot(aes(x=Año,y=Valor, group=Pais, colour=Pais))+
geom_line(size=1.6) +
labs(title = 'Tipos de interés de préstamos',
x ='Año',
y = 'Tipo de interés (%)',
caption = 'Fuente = Fondo Monetario Internacional') +
theme(legend.position = "bottom")+
theme(axis.text.x=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.text.y=element_text(size=11,colour="#535353",face="bold")) +
theme(axis.title.y=element_text(size=11,colour="#535353",face="bold",vjust=1.5)) +
theme(axis.title.x=element_text(size=11,colour="#535353",face="bold",vjust=-.5))+
theme(axis.text.x  = element_text(angle=90))+
theme(plot.title=element_text(face="bold",hjust=0.5,vjust=2,colour="#3C3C3C",size=18))+
theme(legend.title=element_blank())+
scale_x_continuous(breaks = seq(2000,2019,1))
